{"version":3,"sources":["GenreTag.js","BookCard.js","AddBookForm.js","Button.js","library.js","App.js","index.js"],"names":["GenreTag","tag","className","BookCard","isbn","name","author","genre","pages","hasBookBeenRead","remove","toggle","Array","isArray","i","map","item","key","formatGenres","onClick","type","AddBookForm","tempBook","addBookToLibrary","blankBook","useState","bookToAdd","modifyBook","handleChange","e","valueToChange","target","newValue","value","property","parseInt","finaliseBook","genreTags","split","formatGenreTags","id","document","getElementById","classList","add","htmlFor","onChange","Button","label","onClickFunction","library","App","libraryStorage","JSON","parse","window","localStorage","getItem","initialLibrary","defaultLibrary","makeChangeToLibrary","useEffect","setItem","stringify","removeBookFromLibrary","confirm","filter","book","toggleReadStatus","books","newLibrary","push","ReactDOM","render"],"mappings":"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","file":"static/js/main.9afabb84.chunk.js","sourcesContent":["import React from \"react\"\n\nimport \"./genre-tag.scss\"\n\nfunction GenreTag({tag}) {\n  return(\n    <div className=\"genre-tag\">\n      {tag}\n    </div>\n  )\n}\n\nexport default GenreTag\n","import React from \"react\"\n\nimport GenreTag from \"./GenreTag\"\n\nimport \"./book-card.scss\"\n\nconst BookCard = ({ isbn, name, author, genre, pages, hasBookBeenRead, remove, toggle }) => {\n\n  function formatGenres() {\n    if (Array.isArray(genre)) {\n      let i = 0\n      return (\n        genre.map(item => {\n          i++\n          return (\n            <GenreTag\n              key={`${isbn}-tag-${i}`}\n              tag={item}\n            />\n          )\n        })\n      )\n    }\n    else {\n      return genre\n    }\n  }\n\n  return (\n    <div className=\"book-card\">\n      <div className=\"card-info\">\n        <ul className=\"book-info\">\n          <li className=\"book-title\">{name}</li>\n          <li>by {author}</li>\n          <li>Genre: {formatGenres()}</li>\n          <li>Pages: {pages}</li>\n          <li>ISBN: {isbn}</li>\n        </ul>\n      </div>\n      <div className=\"card-controls\">\n        <span className={hasBookBeenRead ? \"read\" : \"un-read\"}onClick={() => toggle(isbn)}>\n          {hasBookBeenRead ? \"Read\" : \"Un-Read\"}\n        </span>\n        <button type=\"button\" onClick={() => remove(isbn)}>\n          Remove\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default BookCard\n","import React, { useState } from \"react\"\n\nimport \"./add-book-form.scss\"\n\nconst AddBookForm = ({ addBookToLibrary }) => {\n\n  const blankBook = {\n    isbn: \"\",\n    name: \"\",\n    author: \"\",\n    genre: \"\",\n    pages: \"\",\n    hasBookBeenRead: false\n  }\n  let [ bookToAdd, modifyBook  ] = useState(blankBook)\n  let tempBook\n\n/////////////////////////////////////////////////////////////////// Form handler\n  const handleChange = (e) => {\n    let valueToChange = e.target.name\n    let newValue = e.target.value\n    tempBook = bookToAdd\n\n    if (valueToChange === \"isbn\") { // Handle ISBN entry and prevents empty string conflict\n      for (let property in tempBook) {\n        if (property === valueToChange) {\n          if (newValue !== \"\") {\n            tempBook[property] = parseInt(newValue)\n          }\n          else {\n            tempBook[property] = newValue\n          }\n        }\n      }\n    }\n    else if (valueToChange === \"hasBookBeenRead\") { // Handle read checkbox\n      for (let property in tempBook) {\n        if (property === valueToChange) {\n          tempBook[property] = !tempBook[property]\n        }\n      }\n    }\n    else {\n      for (let property in tempBook) { // Handle all other text fields\n        if (property === valueToChange) {\n          tempBook[property] = newValue\n        }\n      }\n    }\n    modifyBook(\n      {\n        isbn: tempBook.isbn,\n        name: tempBook.name,\n        author: tempBook.author,\n        genre: tempBook.genre,\n        pages: tempBook.pages,\n        hasBookBeenRead: tempBook.hasBookBeenRead\n      }\n    )\n  }\n\n///////////////////////////////////////////////////////////////// Form submitter\n  const formatGenreTags = () => {\n    let genres = bookToAdd.genre\n    let genreTags = genres.split(\",\");\n    tempBook = {\n      ...bookToAdd,\n      genre: genreTags\n    }\n    return tempBook\n  }\n\n  const finaliseBook = () => {\n    addBookToLibrary( formatGenreTags() )\n    modifyBook( blankBook )\n  }\n\n///////////////////////////////////////////////////////////////////// Close Form\n  const closeForm = () => {\n    document.getElementById(\"add-book-container\").classList.remove(\"visible\")\n    document.getElementById(\"open-form-button\").classList.add(\"visible\")\n  }\n\n//////////////////////////////////////////////////////////////////////////// JSX\n  return(\n    <div id=\"add-book-container\">\n\n      <header>\n        <h1>New book</h1>\n        <button className=\"close-form\" onClick={() => closeForm()}>x</button>\n      </header>\n\n      <div className=\"subcontainer\">\n        <form className=\"add-book-form\">\n          <div>\n            <section className=\"labels\">\n              <label htmlFor=\"name\">Title</label>\n              <label htmlFor=\"author\">Author</label>\n              <label htmlFor=\"genre\">Genres</label>\n              <label htmlFor=\"pages\">Pages</label>\n              <label htmlFor=\"isbn\">ISBN</label>\n              <label htmlFor=\"hasBookBeenRead\">Read?</label>\n            </section>\n\n            <section className=\"inputs\">\n              <input name=\"name\" type=\"text\" value={bookToAdd.name} onChange={handleChange}/>\n              <input name=\"author\" type=\"text\" value={bookToAdd.author} onChange={handleChange}/>\n              <input name=\"genre\" type=\"text\" value={bookToAdd.genre} onChange={handleChange}/>\n              <input name=\"pages\" type=\"text\" value={bookToAdd.pages} onChange={handleChange}/>\n              <input name=\"isbn\" type=\"text\" value={bookToAdd.isbn} onChange={handleChange}/>\n              <input className=\"checkbox\" name=\"hasBookBeenRead\" type=\"checkbox\" value={bookToAdd.hasBookBeenRead} onChange={handleChange}/>\n            </section>\n          </div>\n          <button type=\"button\" onClick={() => finaliseBook()}>Add to Librio</button>\n        </form>\n      </div>\n    </div>\n\n  )\n}\n\nexport default AddBookForm\n","import React from \"react\"\n\nconst Button = ({ label, onClickFunction, id, className }) => (\n  <div id={id} className={className} onClick={() => {onClickFunction()}}>\n    {label}\n  </div>\n)\n\nexport default Button\n","let library =  [\n  {\n    isbn: 9780582517509,\n    name: \"The Jungle Book\",\n    author: \"Rudyard Kipling\",\n    genre: [\"Childrens\", \"Adventure\"],\n    pages: \"178\",\n    hasBookBeenRead: true\n  },\n  {\n    isbn: 9780749395698,\n    name: \"Mr Nice\",\n    author: \"Howards Marks\",\n    genre: [\"Autobiography\"],\n    pages: \"466\",\n    hasBookBeenRead: false\n  },\n  {\n    isbn: 9780436350221,\n    name: \"Nineteen Eighty-Four\",\n    author: \"George Orwell\",\n    genre: [\"Science Fiction\", \"Dystopian\", \"Political\"],\n    pages: \"412\",\n    hasBookBeenRead: true\n  },\n  {\n    isbn: 9780060173227,\n    name: \"To Kill a Mockingbird\",\n    author: \"Harper Lee\",\n    genre: [\"Novel\", \"Legal\"],\n    pages: \"281\",\n    hasBookBeenRead: true\n  },\n  {\n    isbn: 9780436350222,\n    name: \"Business Secrets of the Pharohs\",\n    author: \"Mark Crorigan\",\n    genre: [\"Business\", \"History\"],\n    pages: \"319\",\n    hasBookBeenRead: true\n  }\n]\n\nexport default library\n","import React, { useState, useEffect } from \"react\"\n\nimport BookCard from \"./BookCard\"\nimport AddBookForm from \"./AddBookForm\"\nimport Button from \"./Button\"\nimport defaultLibrary from \"./library\"\n\nimport \"./app.scss\"\n\nconst App = () => {\n// Initialise library\n  const libraryStorage = JSON.parse(window.localStorage.getItem('libraryStorage'))\n  let initialLibrary = defaultLibrary\n  // If there is an existing stored library then use that over the default one.\n  if (libraryStorage) {\n    initialLibrary = libraryStorage\n  }\n\n  let [ library, makeChangeToLibrary ] = useState(initialLibrary)\n  useEffect(() => {\n    window.localStorage.setItem(\"libraryStorage\", JSON.stringify(library))\n  },[library])\n\n// Methods\n  const addBookToLibrary = (bookToAdd) => {\n    let newLibrary = [...library]\n    newLibrary.push(bookToAdd)\n    makeChangeToLibrary(\n      newLibrary\n    )\n  }\n\n  const removeBookFromLibrary = (isbn) => {\n    let reply = window.confirm(\"Are you sure you want to remove that?\")\n    if (reply === true) {\n      makeChangeToLibrary(\n        library.filter( book => book.isbn !== isbn )\n      )\n    }\n    else {\n      return false\n    }\n  }\n\n  const toggleReadStatus = (isbn) => {\n    let books = [...library]\n    books.map(book => {\n      if (book.isbn === isbn) {\n        for (let property in book ) {\n          if (property === \"hasBookBeenRead\") {\n            book[property] = !book[property]\n          }\n        }\n      }\n      return false\n    })\n    makeChangeToLibrary(\n      books\n    )\n  }\n\n  const openPopupForm = () => {\n    document.getElementById(\"add-book-container\").classList.add(\"visible\")\n    document.getElementById(\"open-form-button\").classList.remove(\"visible\")\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"banner\">\n        <h1>Librio</h1>\n      </header>\n      <main>\n        <Button\n          id={\"open-form-button\"}\n          className={\"visible\"}\n          label={\"Add new book\"}\n          onClickFunction={openPopupForm}/>\n\n        <AddBookForm\n         addBookToLibrary={addBookToLibrary}/>\n        <div className=\"book-cards-container\">\n          {\n            library.map(book => {\n              return (<BookCard\n                key={book.isbn}\n                isbn={book.isbn}\n                name={book.name}\n                author={book.author}\n                genre={book.genre}\n                pages={book.pages}\n                hasBookBeenRead={book.hasBookBeenRead}\n\n                remove={removeBookFromLibrary}\n                toggle={toggleReadStatus} />)\n            })\n          }\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./App\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}