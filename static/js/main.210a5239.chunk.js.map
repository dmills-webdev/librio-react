{"version":3,"sources":["GenreTag.js","BookCard.js","AddBookForm.js","Button.js","library.js","App.js","index.js"],"names":["GenreTag","tag","className","BookCard","isbn","name","author","genre","pages","hasBookBeenRead","remove","toggle","map","item","onClick","type","AddBookForm","addBookToLibrary","blankBook","useState","bookToAdd","modifyBook","handleChange","e","valueToChange","target","newValue","value","tempBook","property","parseInt","id","document","getElementById","classList","add","htmlFor","onChange","finalBook","finaliseBook","Button","label","onClickFunction","library","App","initialLibrary","makeChangeToLibrary","removeBookFromLibrary","window","confirm","filter","book","toggleReadStatus","books","newLibrary","push","key","ReactDOM","render"],"mappings":"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","file":"static/js/main.210a5239.chunk.js","sourcesContent":["import React from \"react\"\n\nimport \"./genre-tag.scss\"\n\nfunction GenreTag({tag}) {\n  return(\n    <div className=\"genre-tag\">\n      {tag}\n    </div>\n  )\n}\n\nexport default GenreTag\n","import React from \"react\"\n\nimport GenreTag from \"./GenreTag\"\n\nimport \"./book-card.scss\"\n\nconst BookCard = ({ isbn, name, author, genre, pages, hasBookBeenRead, remove, toggle }) => {\n\n  function formatGenres() {\n    if (genre) {\n      return (\n        genre.map(item => {\n          return (\n            <GenreTag\n              tag={item}\n            />\n          )\n        })\n      )\n    }\n    else {\n      return false\n    }\n\n  }\n\n  return (\n    <div className=\"book-card\">\n      <div className=\"card-info\">\n        <ul className=\"book-info\">\n          <li className=\"book-title\">{name}</li>\n          <li>by {author}</li>\n          <li>Genre: {formatGenres()}</li>\n          <li>Pages: {pages}</li>\n          <li>ISBN: {isbn}</li>\n        </ul>\n      </div>\n      <div className=\"card-controls\">\n        <span className={hasBookBeenRead ? \"read\" : \"un-read\"}onClick={() => toggle(isbn)}>\n          {hasBookBeenRead ? \"Read\" : \"Un-Read\"}\n        </span>\n        <button type=\"button\" onClick={() => remove(isbn)}>\n          Remove\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default BookCard\n","import React, { useState } from \"react\"\n\nimport \"./add-book-form.scss\"\n\nconst AddBookForm = ({ addBookToLibrary }) => {\n\n  const blankBook = {\n    isbn: \"\",\n    name: \"\",\n    author: \"\",\n    genre: \"\",\n    pages: \"\",\n    hasBookBeenRead: false\n  }\n  let [ bookToAdd, modifyBook  ] = useState(blankBook)\n\n/////////////////////////////////////////////////////////////////// Form handler\n  const handleChange = (e) => {\n    let valueToChange = e.target.name\n    let newValue = e.target.value\n    let tempBook = bookToAdd\n\n    if (valueToChange === \"isbn\") { // Handle ISBN entry and prevents empty string conflict\n      for (let property in tempBook) {\n        if (property === valueToChange) {\n          if (newValue !== \"\") {\n            tempBook[property] = parseInt(newValue)\n          }\n          else {\n            tempBook[property] = newValue\n          }\n        }\n      }\n    }\n    else if (valueToChange === \"hasBookBeenRead\") { // Handle read checkbox\n      for (let property in tempBook) {\n        if (property === valueToChange) {\n          tempBook[property] = !tempBook[property]\n        }\n      }\n    }\n    else {\n      for (let property in tempBook) { // Handle all other text fields\n        if (property === valueToChange) {\n          tempBook[property] = newValue\n        }\n      }\n    }\n    modifyBook(\n      {\n        isbn: tempBook.isbn,\n        name: tempBook.name,\n        author: tempBook.author,\n        genre: tempBook.genre,\n        pages: tempBook.pages,\n        hasBookBeenRead: tempBook.hasBookBeenRead\n      }\n    )\n  }\n\n///////////////////////////////////////////////////////////////// Form submitter\n  const finaliseBook = () => {\n    let finalBook = bookToAdd\n    modifyBook(\n      blankBook\n    )\n    addBookToLibrary( finalBook )\n  }\n\n///////////////////////////////////////////////////////////////////// Close Form\n  const closeForm = () => {\n    document.getElementById(\"add-book-container\").classList.remove(\"visible\")\n    document.getElementById(\"open-form-button\").classList.add(\"visible\")\n  }\n\n//////////////////////////////////////////////////////////////////////////// JSX\n  return(\n    <div id=\"add-book-container\">\n      <h1>New book</h1>\n      <button className=\"close-form\" onClick={() => closeForm()}>x</button>\n      <form className=\"add-book-form\">\n        <div>\n          <section className=\"labels\">\n            <label htmlFor=\"name\">Title</label>\n            <label htmlFor=\"author\">Author</label>\n            <label htmlFor=\"genre\">Genre</label>\n            <label htmlFor=\"pages\">Pages</label>\n            <label htmlFor=\"isbn\">ISBN</label>\n            <label htmlFor=\"hasBookBeenRead\">Read?</label>\n          </section>\n\n          <section className=\"inputs\">\n            <input name=\"name\" type=\"text\" value={bookToAdd.name} onChange={handleChange}/>\n            <input name=\"author\" type=\"text\" value={bookToAdd.author} onChange={handleChange}/>\n            <input name=\"genre\" type=\"text\" value={bookToAdd.genre} onChange={handleChange}/>\n            <input name=\"pages\" type=\"text\" value={bookToAdd.pages} onChange={handleChange}/>\n            <input name=\"isbn\" type=\"text\" value={bookToAdd.isbn} onChange={handleChange}/>\n            <input className=\"checkbox\" name=\"hasBookBeenRead\" type=\"checkbox\" value={bookToAdd.hasBookBeenRead} onChange={handleChange}/>\n          </section>\n        </div>\n        <button type=\"button\" onClick={() => finaliseBook()}>Add to Librio</button>\n\n      </form>\n    </div>\n  )\n}\n\nexport default AddBookForm\n","import React from \"react\"\n\nconst Button = ({ label, onClickFunction, id, className }) => (\n  <div id={id} className={className} onClick={() => {onClickFunction()}}>\n    {label}\n  </div>\n)\n\nexport default Button\n","let library =  [\n  {\n    isbn: 9780582517509,\n    name: \"The Jungle Book\",\n    author: \"Rudyard Kipling\",\n    genre: [\"Childrens\", \"Adventure\"],\n    pages: \"178\",\n    hasBookBeenRead: true\n  },\n  {\n    isbn: 9780749395698,\n    name: \"Mr Nice\",\n    author: \"Howards Marks\",\n    genre: [\"Autobiography\"],\n    pages: \"466\",\n    hasBookBeenRead: false\n  },\n  {\n    isbn: 9780436350221,\n    name: \"Nineteen Eighty-Four\",\n    author: \"George Orwell\",\n    genre: [\"Science Fiction\", \"Dystopian\", \"Political\"],\n    pages: \"412\",\n    hasBookBeenRead: true\n  },\n  {\n    isbn: 9780060173227,\n    name: \"To Kill a Mockingbird\",\n    author: \"Harper Lee\",\n    genre: [\"Novel\", \"Legal\"],\n    pages: \"281\",\n    hasBookBeenRead: true\n  },\n  {\n    isbn: 9780436350222,\n    name: \"Business Secrets of the Pharohs\",\n    author: \"Mark Crorigan\",\n    genre: [\"Business\", \"History\"],\n    pages: \"319\",\n    hasBookBeenRead: true\n  }\n]\n\nexport default library\n","import React, { useState } from \"react\"\n\nimport BookCard from \"./BookCard\"\nimport AddBookForm from \"./AddBookForm\"\nimport Button from \"./Button\"\nimport initialLibrary from \"./library\"\n\nimport \"./app.scss\"\n\nconst App = () => {\n  let [ library, makeChangeToLibrary ] = useState(initialLibrary)\n\n  const addBookToLibrary = (bookToAdd) => {\n    let newLibrary = [...library]\n    newLibrary.push(bookToAdd)\n    makeChangeToLibrary(\n      newLibrary\n    )\n  }\n\n  const removeBookFromLibrary = (isbn) => {\n    let reply = window.confirm(\"Are you sure you want to remove that?\")\n    if (reply === true) {\n      makeChangeToLibrary(\n        library.filter( book => book.isbn !== isbn )\n      )\n    }\n    else {\n      return false\n    }\n  }\n\n  const toggleReadStatus = (isbn) => {\n    let books = [...library]\n    books.map(book => {\n      if (book.isbn === isbn) {\n        for (let property in book ) {\n          if (property === \"hasBookBeenRead\") {\n            book[property] = !book[property]\n          }\n        }\n      }\n      return false\n    })\n    makeChangeToLibrary(\n      books\n    )\n  }\n\n  const openPopupForm = () => {\n    document.getElementById(\"add-book-container\").classList.add(\"visible\")\n    document.getElementById(\"open-form-button\").classList.remove(\"visible\")\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"banner\">\n        <h1>Librio</h1>\n      </header>\n      <main>\n        <Button\n          id={\"open-form-button\"}\n          className={\"visible\"}\n          label={\"Add new book\"}\n          onClickFunction={openPopupForm}/>\n\n        <AddBookForm\n         addBookToLibrary={addBookToLibrary}/>\n        <div className=\"book-cards-container\">\n          {\n            library.map(book => {\n              return (<BookCard\n                key={book.isbn}\n                isbn={book.isbn}\n                name={book.name}\n                author={book.author}\n                genre={book.genre}\n                pages={book.pages}\n                hasBookBeenRead={book.hasBookBeenRead}\n\n                remove={removeBookFromLibrary}\n                toggle={toggleReadStatus} />)\n            })\n          }\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./App\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}